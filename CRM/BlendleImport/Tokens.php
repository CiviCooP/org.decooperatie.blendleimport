<?php

/**
 * Class CRM_BlendleImport_Tokens.
 * Mailing tokens for activities/contributions generated by this extension.
 *
 * @author Kevin Levie <kevin.levie@civicoop.org>
 * @package org.decooperatie.blendleimport
 * @license AGPL-3.0
 */
class CRM_BlendleImport_Tokens {

  /**
   * Register tokens.
   * TODO Decide how to handle tokens - will this scale if we add the possibility to delete old import jobs?
   * @param array $tokens
   */
  public static function tokens(&$tokens) {
    $jobs = CRM_BlendleImport_BAO_ImportJob::getJobs(['status' => 'complete']);
    $tokens['blendleimport'] = [];
    foreach($jobs as $job) {
      $tokens['blendleimport']['job_' . $job->id . '_name'] = ts('Blendle Import Job Name (#' . $job->id . ')');
      $tokens['blendleimport']['job_' . $job->id . '_publication'] = ts('Blendle Import Publication Name (#' . $job->id . ')');
      $tokens['blendleimport']['job_' . $job->id . '_import_date'] = ts('Blendle Import Date (#' . $job->id . ')');
      $tokens['blendleimport']['job_' . $job->id . '_total_amount'] = ts('Blendle Import Total Amount (#' . $job->id . ')');
      $tokens['blendleimport']['job_' . $job->id . '_fee_amount'] = ts('Blendle Import Fee Amount (#' . $job->id . ')');
      $tokens['blendleimport']['job_' . $job->id . '_net_amount'] = ts('Blendle Import Net Amount (#' . $job->id . ')');
      $tokens['blendleimport']['job_' . $job->id . '_activity_list'] = ts('Blendle Import Article List (#' . $job->id . ')');
    }
  }

  /**
   * Return values for these tokens.
   * TODO Implement actual tokens...
   * @param $values
   * @param $cids
   * @param null $job
   * @param array $tokens
   * @param null $context
   */
  public static function tokenValues(&$values, $cids, $job = null, $tokens = array(), $context = null) {

    if (!empty($tokens['blendleimport'])) {
      foreach($tokens['blendleimport'] as $k => $i) {
        $key = is_int($i) ? $k : $i;
        if(preg_match('/job_([0-9]+)_([a-zA-Z0-9-_]+)/', $key, $matches)) {
          $jobId = $matches[1];
          $token = $matches[2];

          foreach($cids as $cid) {
            $values[$cid]['blendleimport.'.$key] = "[TODO Implement token - job id $jobId, sub token $token]";
          }
        }
      }
    }

  }

}